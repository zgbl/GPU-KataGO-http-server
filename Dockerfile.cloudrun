# Google Cloud Run 专用 KataGo HTTP Server Dockerfile
# 针对Cloud Run免费版本优化：CPU-only，轻量化构建

FROM python:3.11-slim

# 设置环境变量
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV FLASK_ENV=production
ENV PORT=8080
ENV HOST=0.0.0.0

# 设置工作目录
WORKDIR /app

# 安装系统依赖（包含Eigen3）
RUN apt-get update && apt-get install -y build-essential cmake git libzip-dev zlib1g-dev libboost-system-dev libboost-filesystem-dev libeigen3-dev curl && rm -rf /var/lib/apt/lists/* && apt-get clean

# 创建必要的目录
RUN mkdir -p /app/logs /app/models /app/configs /app/bin

# 复制KataGo源代码
COPY KataGo-BlackRice/cpp/ /app/cpp/

# 编译CPU版本的KataGo（适合Cloud Run免费版本）
RUN cd /app/cpp && cmake . -DUSE_BACKEND=EIGEN -DBUILD_MCTS=1 -DCMAKE_BUILD_TYPE=Release -DUSE_AVX2=0 -DNO_GIT_REVISION=1 && make -j2 && cp katago /app/bin/ && cd / && rm -rf /app/cpp

# 复制配置文件（使用正确的路径）
COPY KataGo-BlackRice/configs/analysis_docker.cfg /app/configs/
COPY configs/katago_gtp.cfg /app/configs/

# 复制HTTP服务器代码
COPY katago_analysis_server_cloudrun.py /app/katago_analysis_server.py
COPY katago-server/requirements.txt /app/

# 安装Python依赖
RUN pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -r /app/requirements.txt && pip install --no-cache-dir flask-cors gunicorn

# 创建轻量化的健康检查脚本
RUN echo '#!/bin/bash\ncurl -f http://localhost:$PORT/health --max-time 5 || exit 1' > /app/health_check.sh && chmod +x /app/health_check.sh

# 创建启动脚本
RUN echo '#!/bin/bash\nexec gunicorn --bind 0.0.0.0:$PORT --workers 1 --threads 2 --timeout 120 --preload katago_analysis_server:app' > /app/start.sh && chmod +x /app/start.sh

# 暴露端口
EXPOSE $PORT

# 健康检查
HEALTHCHECK --interval=60s --timeout=10s --start-period=120s --retries=2 CMD /app/health_check.sh

# 使用gunicorn启动服务
CMD ["/app/start.sh"]